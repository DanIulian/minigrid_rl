main:
  env: MiniGrid-DoorKey-8x8-v0 # required=True, help="name of the environment to train on (REQUIRED)")
  seed: 0 # type=int, default=1, help="random seed (default: 1)")
  procs: 16 # type=int, default=16, help="number of processes (default: 16)") # number of envs
  actual_procs: 4 # type=int, default=16, help="number of processes (default: 16)")
  frames: 4.e+6 # type=int, default=10**7, help="number of frames of training (default: 10e7)")
  log_interval: 1 # type=int, default=1, help="number of updates between two logs (default: 1)")
  eval_interval: 10
  save_interval: 0 # type=int, default=0, help="number of updates between two saves (default: 0, 0 means no saving)")
  tb: false # action="store_true", default=False, help="log into Tensorboard")
  text: &text false # action="store_true", default=False, help="add a GRU to the model to handle text  input")

  max_eprews: 0.9 # Cap training when mean episode rewards reaches this value
  save_best: true
  save_all: true

env_cfg:
  max_episode_steps: 200 # environment steps
  max_image_value: 15.
  normalize: true
  wrapper: [include_position, get_interactions, occupancy_stats]
  no_eval_envs: 0

agent:
  name: PPORND
  frames_per_proc: 128 # type=int, default=None, help="number of frames per process before update
  (default: 5 for A2C and 128 for PPO)")
  discount: 0.99 # type=float, default=0.99, help="discount factor (default: 0.99)")
  optimizer: Adam
  optimizer_args:
    lr: 0.001
    eps: 1.e-8
  gae_lambda: 0.95 # type=float, default=0.95, help="lambda coefficient in GAE formula (default: 0.95, 1 means no gae)")
  entropy_coef: 0.0001 # type=float, default=0.01, help="entropy term coefficient (default: 0.01)")
  value_loss_coef: 0.5 # type=float, default=0.5, help="value loss term coefficient (default: 0.5)")
  max_grad_norm: 0.5 # type=float, default=0.5, help="maximum norm of gradient (default: 0.5)")
  clip_eps: 0.1 # type=float, default=0.2, help="clipping epsilon for PPO (default: 0.2)")
  epochs: 4 # type=int, default=4, help="number of epochs for PPO (default: 4)")
  num_minibatch: 8 # type=int, default=8, help="number of minibatches per epoch"
  batch_size: 256 # type=int, default=256, help="batch size for PPO (default: 256)")
  recurrence: &recurrence 4 # type=int, default=1, help="number of timesteps gradient is
  # backpropagated (default: 1)\nIf > 1, a LSTM is added to the model to have memory")
  min_mem: &min_mem 0  # If min number of recurrence to use mem
  int_coeff: 1.
  ext_coeff: 2.
  exp_used_pred: 0.65 #type=float, default=0.25, help="proportion of experience used for training predictor

model:
  name: RNDModel
  recurrence: *recurrence
  min_mem: *min_mem
  text: *text
  memory_type: GRU
  use_memory: true
  k_sizes: [3, 2, 2]
  s_sizes: [1, 1, 1]


extra_logs: [[state_loss, nsL, 6f], [mean_intrinsic_rewards, mIrew, 6f], [var_intrinsic_rewards, varIrew, 6f]]
